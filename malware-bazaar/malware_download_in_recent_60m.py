#!/usr/bin/env python3
import requests
import pyzipper
import os
from io import BytesIO
import API_Key

from jq import jq

def check_sha256(s):
    if s == "":
        return
    if len(s) != 64:
        raise ValueError("Please use sha256 value instead of '" + s + "'")

    return str(s)

def get_json(sha256):
    data = {'query': 'get_info', 'hash': sha256}
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, allow_redirects=True)

    with open(os.path.join('./malicious', sha256+'.json'), 'wb') as json_file:
        json_file.write(response.content)


def download_sample(sha256):
    ZIP_PASSWORD = b'infected'

    data = {'query': 'get_file', 'sha256_hash': sha256}
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=2, headers=headers, allow_redirects=True)

    if 'file_not_found' in response.text:
        print("Error: file not found")

    else:

        with pyzipper.AESZipFile(BytesIO(response.content)) as zf:
            zf.pwd = ZIP_PASSWORD
            # 지정된 파일 이름으로 파일 저장
            zf.extractall("./malicious")
            print("Sample \"" + sha256 + "\" downloaded and unpacked.")

            # json 파일로 정보 저장
            get_json(sha256)


def get_sample():
    
    data = {
        'query': 'get_recent',
        'selector': 'time',
    }

    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=2, headers=headers)
    json_response = response.content.decode("utf-8", "ignore")

    # jq를 사용하여 필요한 해시들만 추출 (sha256_hash, file_type)
    hashes = jq(".data[].sha256_hash").transform(text=json_response, text_output=True).replace('"', '').split('\n')
    file_types = jq(".data[].file_type").transform(text=json_response, text_output=True).replace('"', '').split('\n')

    for hash_value, file_type in zip(hashes, file_types):
        if file_type == 'exe' :
            hash_to_download = check_sha256(hash_value)
            download_sample(hash_to_download)



if __name__ == "__main__":
    headers = {'API-KEY': API_Key.MalwareBazaarAPI}
    get_sample()
