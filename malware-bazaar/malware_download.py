import requests
import pyzipper
from io import BytesIO
import API_Key

def check_sha256(s):
    if s == "":
        return
    if len(s) != 64:
        raise ValueError("Please use sha256 value instead of '" + s + "'")
    return str(s)

def download_sample(hash):
    ZIP_PASSWORD = b'infected'
    headers = {'API-KEY': API_Key.MalwareBazaarAPI}

    data = {'query': 'get_file', 'sha256_hash': hash}
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=5, headers=headers, allow_redirects=True)

    if 'file_not_found' in response.text:
        print("Error: file not found")

    else:
        with pyzipper.AESZipFile(BytesIO(response.content)) as zf:
            zf.pwd = ZIP_PASSWORD
            zf.extractall("./malicious") # file path
            print("Sample \"" + hash + "\" downloaded and unpacked.")

if __name__ == "__main__":
    # 사용자로부터 sha256 해시값 입력 받기
    user_hash = input("Enter the sha256 hash of the malware sample: ")
    hash_to_download = check_sha256(user_hash)

    # 다운로드 함수 호출
    download_sample(hash_to_download) 
